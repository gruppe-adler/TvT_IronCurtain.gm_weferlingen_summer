enableDebugConsole = 1;

respawn = 3;
respawnDelay = 3;
respawnTemplates[] = {"Base"};
respawnOnStart = -1;//no respawn on start.
respawnDialog = 0;
respawnButton = 0;
loadScreen = "data\loading.jpg";
onLoadMission = "Den Sozialismus in seinem Lauf, h√§lt weder Ochs noch Esel auf. - Erich Honecker";

#define MODULES_DIRECTORY node_modules

// dialogs
#include "grad-landline\dialogs\rscPhoneBook.hpp"
#include "grad-landline\dialogs\rscRotary.hpp"
#include "grad-landline\dialogs\rscKeypad.hpp"
#include "node_modules\grad-passport\grad_passport.hpp"
#include "node_modules\grad-advancedLockpicking\grad_advancedLockpicking.hpp"
#include "grad-vopo\grad_passport.hpp"
#include "grad-stasi\dialogs\rscCutScene.hpp"
#include "grad-nvacommand\displays\baseRsc.hpp"

#include "IC-config\cfgGradCivs.hpp"
#include "IC-config\cfgCustomIdentities.hpp"
#include "IC-config\cfgReinforcements.hpp"

#include "node_modules\grad-fortifications\grad_fortifications.hpp"

class RscTitles {
    #include "node_modules\grad-fortifications\dialog\hint\title.hpp"
};

class cfgFunctions {
    #include "node_modules\grad-fortifications\cfgFunctions.hpp"
    #include "node_modules\grad-gpsTracker\cfgFunctions.hpp"
    #include "node_modules\grad-passport\cfgFunctions.hpp"
    #include "node_modules\grad-advancedLockpicking\cfgFunctions.hpp"
    #include "node_modules\grad-civs\cfgFunctions.hpp"

    #include "IC-setup\cfgFunctions.hpp"

    #include "grad-nvacommand\cfgFunctions.hpp"
    #include "grad-stasi\cfgFunctions.hpp"
    #include "grad-vopo\cfgFunctions.hpp"

    #include "grad-arrestMechanics\cfgFunctions.hpp"
    #include "grad-landline\cfgFunctions.hpp"

    #include "IC-missionFlow\cfgFunctions.hpp"
    #include "IC-loadouts\cfgFunctions.hpp"

};

class cfgSounds {
    #include "grad-nvacommand\cfgSounds.hpp"
    #include "grad-stasi\cfgSounds.hpp"
    #include "grad-landline\cfgSounds.hpp"
    #include "grad-arrestMechanics\cfgSounds.hpp"
};


class CfgNotifications {
    #include "node_modules\grad-advancedLockpicking\cfgNotifications.hpp"
};

class CfgGradAdvancedLockpicking {
    canLockpickDefault = 1;                         // can all units lockpick by default? 0/1
    needLockpickSet = 1;                            // do units need ACE's lockpick set item in inventory to be able to pick locks? 0/1

    canUseWantedListCondition = "true";             // condition for ability to use the wantedList; passed params are [unit]; condition and sides are logically connected by OR
    canUseWantedListSides[] = {};                   // sides that can use the wanted list by default; e.g. {"WEST","EAST","INDEPENDENT","CIVILIAN"}; condition and sides are logically connected by OR
    wantedListTitle = "KfZ Fahndungsliste";   // title of wantedList dialog; e.g. "Tanoa Police Theft Tracker"

    baseLockpickTimeDefault = 10;                   // base time in seconds for picking locks; time factors are applied to this; -1 to make locks unpickable
    baseSuccessProbabilityDefault = 75;             // base probability in percent for successfully picking locks; success factors are applied to this

    alarmOnSuccessProbabilityDefault = -1;          // probability in percent for vehicle alarm to trigger even when lockpicking was successful; -1 to disable
    wantedListOnSuccessProbabilityDefault = -1;     // probability in percent for theft to be added to wanted list even when lockpicking was successful; -1 to disable

    wantedListDelayOnFailure[] = {0,0};             // min and max delay in seconds for failed thefts to be added to wanted list
    wantedListDelayOnSuccess[] = {10,60};           // min and max delay in seconds for successful thefts to be added to wanted list

    suspectNameProbabilityOnAlarm = 0;             // probability in percent for thief's name to be added to wanted list if vehicle alarm was triggered
    suspectNameProbabilityOnNoAlarm = 1;            // probability in percent for thief's name to be added to wanted list if vehicle alarm was not triggered

    plateNumberProbability = 100;                    // probability for plate number to be added to wanted list

    alarmDurationMinMax[] = {10,30};                // min and max duration in seconds for alarm

    specialistTimeFactor = 0.7;                     // time factor for specialists, lower means faster
    specialistSuccessFactor = 1.5;                  // probability factor for success for specialists

    canPickCar = 1;                                 // make car locks pickable; 0/1
    carTimeFactor = 1;                              // time factor for picking car locks, higher means lockpicking takes longer
    carSuccessFactor = 0.7;                           // probability factor for successfully picking car locks, higher means more likely to succeed

    canPickMotorcycle = 1;
    motorcycleTimeFactor = 0.7;
    motorcycleSuccessFactor = 1.5;

    canPickBoat = 1;
    boatTimeFactor = 1;
    boatSuccessFactor = 1;

    canPickTank = 1;
    tankTimeFactor = 5;
    tankSuccessFactor = 0.1;

    canPickHelicopter = 0;
    helicopterTimeFactor = 2;
    helicopterSuccessFactor = 0.9;

    canPickPlane = 0;
    planeTimeFactor = 4;
    planeSuccessFactor = 0.1;
};


class CfgSFX
{
    class pressTon7512
    {
        // {soundPath, soundVolume, soundPitch, maxDistance, probability, loopminDelay, loopmidDelay, loopmaxDelay}
        sound0[] = {"grad-vopo\sounds\presston7512_loop.ogg", db+5, 1.0, 1000, 1, 0, 0, 0};  // path to addon sound
        sounds[] = {sound0};
        empty[] = {"", 0, 0, 0, 0, 0, 0, 0};
    };

    class motorSirene
    {
        // {soundPath, soundVolume, soundPitch, maxDistance, probability, loopminDelay, loopmidDelay, loopmaxDelay}
        sound0[] = {"grad-vopo\sounds\motorsirene_loop.ogg", db+5, 1.0, 1000, 1, 0, 0, 0};  // path to addon sound
        sounds[] = {sound0};
        empty[] = {"", 0, 0, 0, 0, 0, 0, 0};
    };
};

class CfgVehicles
{
    class pressTon7512Sound // class name to be used with createSoundSource
    {
        sound = "pressTon7512"; // reference to CfgSFX class
    };

    class motorSireneSound // class name to be used with createSoundSource
    {
        sound = "motorSirene"; // reference to CfgSFX class
    };
};

class CfgIdentities
{
    class SomeGuy
    {
        face = "WhiteHead_10";
        glasses = "G_Tactical_Clear";
        name = "Adams";
        nameSound = "Adams";
        pitch = 1.0;
        speaker = "Male01ENG";
    };
};